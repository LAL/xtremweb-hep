
// define all path and variables used in gradle
project.ext{
    PROJECT_TAG = project.name + '-' + version
    root = '.'
    build = root + '/build'
    libXtremWeb = root + '/libXtremWeb'
    src = root + '/src'
    res = src + '/main/resources'
    conf = res + '/conf'
    benchmark = res + '/benchmark'
    templates = res + '/templates'
    doc = res + '/doc'
    docker = res + '/docker'
    installers = res + '/installers'
    misc = res + '/misc'
    scripts = res + '/scripts'
    linuxInstallers = installers + '/linux'
    macInstallers = installers + '/macosx'
    opt = '/opt'
    dist = build + '/dist/' + PROJECT_TAG
    distBin = dist + '/bin'
    distLib = dist + '/lib'
    distDoc = dist + '/doc'
    distMacInstallers = dist + "/installers/macosx"
    privateEtc = '/private/etc'
}

// Define custom properties that can be used everywhere
project.ext.getCustomProperties = {

    def props = new Properties()
    // add all properties from conf file
    file(conf + "/xwconfigure.values").withInputStream { props.load(it) }
    for (String key : props.stringPropertyNames()) {
        props.setProperty(key, props.getProperty(key).replace('\'', ''))
    }

    // add other custom properties
    props.setProperty("ADMINUID", 'uuidgen | tr \"A-Z\" \"a-z\"'.execute().text.trim())
    props.setProperty("WORKERUID", 'uuidgen | tr \"A-Z\" \"a-z\"'.execute().text.trim())
    props.setProperty("VWORKERUID", 'uuidgen | tr \"A-Z\" \"a-z\"'.execute().text.trim())
    props.setProperty("ADMINGROUPUID", 'uuidgen | tr \"A-Z\" \"a-z\"'.execute().text.trim())
    props.setProperty("PUBLICWORKERSGROUPUID", 'uuidgen | tr \"A-Z\" \"a-z\"'.execute().text.trim())
    props.setProperty("XWVERSION", version)
    props.setProperty("INSTALLDIR", opt)


    def path = 'pwd'.execute().text.trim()
    def keystore = path + "/build/dist/" + PROJECT_TAG + "/keystore/"
    def keystorePrefix = keystore.replace('/', '\\/').replace('.', '\\.')
    props.setProperty("SSLKEYSTOREWORKER", keystorePrefix + "xwhepworker\\.keys")
    props.setProperty("SSLKEYSTOREVWORKER", keystorePrefix + "xwhepworker\\.keys")
    props.setProperty("SSLKEYSTORECLIENT", keystorePrefix + "xwhepclient\\.keys")

    def certname = "cn=" + props.CERTCN + ",o=" + props.CERTO + ",c=" + props.CERTC
    if (props.CERTOU != "") {
        certname += ",ou=" + props.CERTOU
    }
    if (props.CERTL != "") {
        certname += ",l=" + props.CERTL
    }
    props.setProperty("CERTNAME", certname)

    return props
}
