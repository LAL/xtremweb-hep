#!/bin/sh
#=============================================================================
#
#  File    : xwdeploy.sh
#  Date    : July 24th, 2017
#  Author  : Oleg Lodygensky
#
#  Change log:
#  - Jul 24th,2017 : Oleg Lodygensky; creation
#
#  OS      : Linux, mac os x
#
#  Purpose : this script creates and starts a new Docker ctn for the XWHEP server
#
#  Remarks : this script is auto generated by install process
#
#=============================================================================


# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.org
#
#      This file is part of XtremWeb-HEP.
#
#    XtremWeb-HEP is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    XtremWeb-HEP is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with XtremWeb-HEP.  If not, see <http://www.gnu.org/licenses/>.
#
#

XWVERSION='10.6.0'
THISOS=`uname -s`

case "$THISOS" in

  Darwin )
    DATE_FORMAT='+%Y-%m-%d %H:%M:%S%z'
    ;;

  Linux )
    DATE_FORMAT='--rfc-3339=seconds'
    ;;

  * )
    fatal  "OS not supported ($THISOS)"  TRUE
    ;;

esac

#=============================================================================
#
#  Function  fatal (Message, Force)
#
#=============================================================================
fatal ()
{
  msg="$1"
  FORCE="$2"
  [ "$msg" ]  ||  msg="Ctrl+C"

  echo  "$(date "$DATE_FORMAT")  $SCRIPTNAME  FATAL : $msg"

  exit 1
}

#=============================================================================
#
#  Function  usage ()
#
#=============================================================================
usage()
{
cat << END_OF_USAGE
  This script create a new ctn for the XWHEP server.
  This is all created from sources downloaded from github.
  Worker and client Debian packages are copied from the server ctn.
END_OF_USAGE

  exit 0
}


#=============================================================================
#
#  Main
#
#=============================================================================
trap  fatal  SIGINT  SIGTERM



ROOTDIR="$(dirname $(dirname $(realpath "$0")))"

XWJOBUID="$(date '+%Y-%m-%d-%H-%M-%S')"

SERVER_MASTER_IMAGENAME="server-masterimg"
SERVER_MASTER_CONTAINERNAME="server-masterctn"
SERVER_IMAGENAME="xwserverimg_${XWJOBUID}"
SERVER_CONTAINERNAME="xwserverctn_${XWJOBUID}"
MASTER_CONTEXT="${ROOTDIR}/master"
WORKER_IMAGENAME="xwworkerimg_${XWJOBUID}"
WORKER_CONTAINERNAME="xwworkerctn_${XWJOBUID}"
CLIENT_IMAGENAME="xwclientimg_${XWJOBUID}"
CLIENT_CONTAINERNAME="xwclientctn_${XWJOBUID}"
SERVER_CONTEXT="${ROOTDIR}/server"
WORKER_CONTEXT="${ROOTDIR}/worker"
CLIENT_CONTEXT="${ROOTDIR}/client"


while [ $# -gt 0 ]; do

  case "$1" in

    --help )
      usage
      ;;

    -v | --verbose | --debug )
      VERBOSE=1
      set -x
      ;;

  esac

  shift

done

type docker > /dev/null 2>&1
if [ $? -ne 0 ] ; then
	fatal "docker not installed"
fi

type docker-compose > /dev/null 2>&1
if [ $? -ne 0 ] ; then
	fatal "docker-compose not installed"
fi

if [ ! -f ${MASTER_CONTEXT}/Dockerfile ] ; then
	fatal "${MASTER_CONTEXT}/Dockerfile not found"
fi

if [ ! -f ${SERVER_CONTEXT}/Dockerfile ] ; then
	fatal "${SERVER_CONTEXT}/Dockerfile not found"
fi

if [ ! -f ${WORKER_CONTEXT}/Dockerfile ] ; then
	fatal "${WORKER_CONTEXT}/Dockerfile not found"
fi

if [ ! -f ${CLIENT_CONTEXT}/Dockerfile ] ; then
	fatal "${CLIENT_CONTEXT}/Dockerfile not found"
fi

docker build --force-rm --tag  ${SERVER_MASTER_IMAGENAME} ${MASTER_CONTEXT}

docker run -dit --name ${SERVER_MASTER_CONTAINERNAME} ${SERVER_MASTER_IMAGENAME}

docker cp ${SERVER_MASTER_CONTAINERNAME}:/xwhep/xtremweb-hep-master/build/dist/xwhep-${XWVERSION}/xwhep-server-${XWVERSION}.deb ${SERVER_CONTEXT}
docker cp ${SERVER_MASTER_CONTAINERNAME}:/xwhep/xtremweb-hep-master/build/dist/xwhep-${XWVERSION}/xwhep-server-conf-${XWVERSION}.deb ${SERVER_CONTEXT}
docker cp ${SERVER_MASTER_CONTAINERNAME}:/xwhep/xtremweb-hep-master/build/dist/xwhep-${XWVERSION}/xwhep-worker-${XWVERSION}.deb ${WORKER_CONTEXT}
docker cp ${SERVER_MASTER_CONTAINERNAME}:/xwhep/xtremweb-hep-master/build/dist/xwhep-${XWVERSION}/xwhep-client-${XWVERSION}.deb ${CLIENT_CONTEXT}

docker stop ${SERVER_MASTER_CONTAINERNAME}
docker rm ${SERVER_MASTER_CONTAINERNAME}

sed -i "s/img.*$/img_${XWJOBUID}/g" docker-compose.yml
sed -i "s/ctn.*$/ctn_${XWJOBUID}/g" docker-compose.yml

docker-compose up

exit 0
###########################################################
#     EOF        EOF     EOF        EOF     EOF       EOF #
###########################################################
