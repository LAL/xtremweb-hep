#!/bin/bash
#
# File : xwhep.vworker/installer/Ressources/postflight
#
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.org
# 
#      This file is part of XtremWeb-HEP.
#
#    XtremWeb-HEP is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    XtremWeb-HEP is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with XtremWeb-HEP.  If not, see <http://www.gnu.org/licenses/>.
#
#

ERROK=0
ERRUSAGE=1
ERRFILE=2
ERRCONNECTION=3
ERRSTATE=4
ERRUSER=5


TMPDATE=`date +%Y%m%d%H%M%S`
VMNAME="vworker."$TMPDATE


#SYSLOGIN="@SYSTEMUSER@"
PKG="xwhep.vworker"
PROG="xtremweb.vworker"
# this is the name defined in /Library/LaunchDaemons/xwhep.vworker.plist
LAUNCHNAME="fr.in2p3.lal.xwhep.vworker"
LOGFILE="/var/log/$PKG"_"$VMNAME.log"
sudo touch $LOGFILE


VBAPPNAME="virtualbox"
VBHL="/Applications/VirtualBox.app/Contents/MacOS/VBoxHeadless"

echo "*****************************" >> $LOGFILE 2>&1
echo "* [`date`] [$PROG] INFO : starting $PROG postflight"  >> $LOGFILE 2>&1

THISLAUNCHNAME="fr.in2p3.lal.xwhep.$VMNAME"
mv /Library/LaunchDaemons/$LAUNCHNAME.plist /Library/LaunchDaemons/$THISLAUNCHNAME.plist >> $LOGFILE 2>&1


#
# check if  ISO is here, just in case
# do not edit, this variable is set by the makefile
#
echo "Checking ISO file" >> $LOGFILE 2>&1
LIVECD=""
#for i in `ls /private/etc/$PKG/iso/*.iso` ; do
#	LIVECD=$i
#	break;
#done
if [ "X$LIVECD" = "X" ] ; then
    echo "* [`date`] [$PROG] ERROR : can't find LiveCD" >> $LOGFILE 2>&1
    echo "*****************************" >> $LOGFILE 2>&1
    exit $ERRFILE
fi

echo "ISO file found = $LIVECD" >> $LOGFILE 2>&1

THISLIVECD=/private/etc/$PKG/iso/$VMNAME.iso
mv -f $LIVECD $THISLIVECD  >> $LOGFILE 2>&1
if [ $? -ne 0 ] ; then
    echo "* [`date`] [$PROG] ERROR : can't copy ISO file" >> $LOGFILE 2>&1
    echo "*****************************" >> $LOGFILE 2>&1
    exit $ERRFILE
fi

echo "Checking ISO file done" >> $LOGFILE 2>&1



CONTEXT=/private/etc/$PKG/vdi/xwcontext_disk.vdi
#
# because there may be several VM on the same guest
#
THISCONTEXT=/private/etc/$PKG/vdi/$VMNAME.vdi

CONTEXTUALIZATION=""
mv -f $CONTEXT $THISCONTEXT >> $LOGFILE 2>&1 
if [ $? -eq 0 ] ; then
	CONTEXTUALIZATION="--context $THISCONTEXT"
fi

#
# check if  VirtualBox is installed
#
echo "Checking $VBAPPNAME ($VBHL)" >> $LOGFILE 2>&1

if [ ! -x $VBHL ] ; then
    echo "* [`date`] [$PROG] ERROR : $VBAPPNAME not installed ($VBHL not found)" >> $LOGFILE 2>&1
    echo "*****************************" >> $LOGFILE 2>&1
    exit $ERRUSAGE
fi

echo "Checking $VBAPPNAME done" >> $LOGFILE 2>&1


chmod +x /private/etc/$PKG/bin/*.sh
chmod +x /Applications/$PKG/bin/*.sh

echo "*****************************" >> $LOGFILE 2>&1
echo "* [`date`] [$PROG] INFO : installing $PROG"  >> $LOGFILE 2>&1

OSMAJOR="10"
OSMINOR="6"

OSVERSION=`sw_vers -productVersion`
if [ $? -eq 0 ] ; then
    OSMAJOR=`sw_vers -productVersion | cut -d '.' -f 1`
    OSMINOR=`sw_vers -productVersion | cut -d '.' -f 2`
else
    echo "* [`date`] [$PROG] ERROR : can't determine OS version (sw_vers not found)" >> $LOGFILE 2>&1
    echo "*****************************" >> $LOGFILE 2>&1
    exit $ERRUSAGE
fi

if [ $OSMAJOR -lt 10 ] ; then
    echo "* [`date`] [$PROG] ERROR : Mac OS $OSMAJOR not supported" >> $LOGFILE 2>&1
    echo "*****************************" >> $LOGFILE 2>&1
    exit $ERRUSAGE
fi

if [ $OSMINOR -lt 4 ] ; then
    echo "* [`date`] [$PROG] ERROR : Mac OS $OSMAJOR.$OSMINOR not supported (must be >= 10.4)" >> $LOGFILE 2>&1
    echo "*****************************" >> $LOGFILE 2>&1
    exit $ERRUSAGE
fi

if [ ! -d /System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home/ ] ; then
    echo "* [`date`] [$PROG] ERROR : Can't find Java 1.6" >> $LOGFILE 2>&1
    echo "*****************************" >> $LOGFILE 2>&1
    exit $ERRUSAGE
fi

echo "Installing $PKG" >> $LOGFILE 2>&1


# if [ "X$SYSLOGIN" != "X" ] ; then 
#     echo "* [`date`] [$PROG] INFO : SYSLOGIN = $SYSLOGIN" >> $LOGFILE 2>&1
#     dscl . list /users/$SYSLOGIN
#     if [ $? -ne 0 ] ; then
# 		maxid=$(dscl . -list /Users UniqueID | awk '{print $2}' | sort -ug | tail -1)
# 		newid=$((maxid+1))
# 		echo "/private/etc/$PKG/bin/adduser.sh $SYSLOGIN $SYSLOGIN $newid staff" >> $LOGFILE 2>&1
# 		sudo /private/etc/$PKG/bin/adduser.sh $SYSLOGIN $SYSLOGIN $newid staff >> $LOGFILE 2>&1
# 		if [ $? -ne 0 ] ; then
# 	    	echo "* [`date`] [$PROG] ERROR : can't add user $SYSLOGIN" >> $LOGFILE 2>&1
# 		    echo "*****************************" >> $LOGFILE 2>&1
# 		    exit $ERRUSER
# 		else
# 	    	echo "* [`date`] [$PROG] INFO : user $SYSLOGIN added" >> $LOGFILE 2>&1
# 		fi
# 	else
#     	echo "* [`date`] [$PROG] ERROR : user $SYSLOGIN already exist" >> $LOGFILE 2>&1
#     fi
# else
#     echo "* [`date`] [$PROG] ERROR : SYSLOGIN variable is not set" >> $LOGFILE 2>&1
#     echo "*****************************" >> $LOGFILE 2>&1
#     exit $ERRUSER
# fi


#
# Since Mac OS 10.4 launchd is preferred
#
rm -Rf  /Library/StartupItems/$PKG >> $LOGFILE 2>&1

#
# set user
#
TMPNAME=xw_$TMPDATE
#cat /Library/LaunchDaemons/$THISLAUNCHNAME.plist | sed "s/%SYSLOGIN%/$SYSLOGIN/" > /tmp/$TMPNAME
#mv /tmp/$TMPNAME /Library/LaunchDaemons/$THISLAUNCHNAME.plist
#rm -f /tmp/$TMPNAME

cat /Library/LaunchDaemons/$THISLAUNCHNAME.plist | sed "s/%VMNAME%/$VMNAME/g" > /tmp/$TMPNAME
mv /tmp/$TMPNAME /Library/LaunchDaemons/$THISLAUNCHNAME.plist
rm -f /tmp/$TMPNAME

chown root:wheel /Library/LaunchDaemons/$THISLAUNCHNAME.plist >> $LOGFILE 2>&1

launchctl list $THISLAUNCHNAME
if [ $? -eq 0 ] ; then 
	launchctl unload /Library/LaunchDaemons/$THISLAUNCHNAME.plist >> $LOGFILE 2>&1
fi


#chown $SYSLOGIN:$SYSLOGIN $LOGFILE >> $LOGFILE 2>&1
#chown -R $SYSLOGIN:$SYSLOGIN /private/etc/$PKG/ >> $LOGFILE 2>&1

chown root:wheel $LOGFILE >> $LOGFILE 2>&1
chown -R root:wheel /private/etc/$PKG/ >> $LOGFILE 2>&1
chown -R root:wheel /Applications/xwhep.vworker/ >> $LOGFILE 2>&1


sed "s/^VMNAME.*/VMNAME=$VMNAME/g" /private/etc/xwhep.vworker/bin/vworker.sh > /private/etc/xwhep.vworker/bin/$VMNAME.sh 
sed "s/^VMNAME.*/VMNAME=$VMNAME/g" /Applications/xwhep.vworker/bin/start.sh > /Applications/xwhep.vworker/bin/start-$VMNAME.sh 
sed "s/^VMNAME.*/VMNAME=$VMNAME/g" /Applications/xwhep.vworker/bin/stop.sh > /Applications/xwhep.vworker/bin/stop-$VMNAME.sh 
sed "s/^VMNAME.*/VMNAME=$VMNAME/g" /Applications/xwhep.vworker/bin/uninstall.sh > /Applications/xwhep.vworker/bin/uninstall-$VMNAME.sh 
rm -f /Applications/xwhep.vworker/bin/uninstall.sh
rm -f /Applications/xwhep.vworker/bin/vworker.sh
rm -f /Applications/xwhep.vworker/bin/start.sh
rm -f /Applications/xwhep.vworker/bin/stop.sh

chmod +x /private/etc/$PKG/bin/*.sh
chmod +x /Applications/$PKG/bin/*.sh


echo "* [`date`] [$PROG] INFO : Launching new virtual machine $VMNAME" >> $LOGFILE 2>&1
launchctl load -w /Library/LaunchDaemons/$THISLAUNCHNAME.plist >> $LOGFILE 2>&1


exit 0

#
# EOF
#
